extends ./partials/layout.jade

block title
    title Server Timing

block slides

    article.center.text-title
        .wrapper
            h1 Server
                br
                | Timing

    article.center.text-title-2
        .wrapper
            h1 What
                br
                | is it?

    article.center.code-9
        .wrapper
            pre
                code.http.
                    Server-Timing:
                        cache;
                        desc="Cache Read";
                        dur=23.2

    article.center.code-9
        .wrapper
            pre
                code.http.
                    Server-Timing: cache

    article.center.text-title-3
        .wrapper
            h1 What does it do?


    article.screen.screen--server-timing-screen-opera

    article.center.code-1
        .wrapper
            pre
                code.javascript.
                    performance.getEntriesByType('navigation');
                    performance.getEntriesByType('resource');

    article.screen.screen--client-server-timing

    article.screen.screen--client-server-timing-table

    article.center.text-title-4
        .wrapper
            h1 Can I use it?

    article.screen.screen--server-timing-caniuse

    article.screen.screen--blink-edge

    article.screen.screen--server-timing-screen

    article.screen.screen--server-timing-screen-opera

    article.screen.screen--server-timing-screen-safari


    article.center.code-9
        .wrapper
            pre
                code.javascript.
                    Timing-Allow-Origin: *

    article.center.code-10
        .wrapper
            pre
                code.javascript.
                    Chrome v60-64

    article.center.code-10
        .wrapper
            pre
                code.javascript.
                    Server-Timing:
                        cache=23.2;
                        "Cache Read"

    article.center.code-9
        .wrapper
            pre
                code.javascript.
                    HTTPS


    article.screen.screen--server-timing-screen-email

    article.screen.screen--server-timing-screen-ff

    article.center.text-title-5
        .wrapper
            h1 Why do we need
                br
                | it?

    article.center.code-7
        .wrapper
            pre
                code.javascript.
                    node --inspect ./server.js

    article.illustration.illustration--if

    article.center.text-title-4
        .wrapper
            h1 How to use it?

    article.center.code-0
        .wrapper
            pre
                code.javascript.
                    const express = require('express');
                    const app = express();
                    app.get('/', (req, res) => {
                        //…
                        res.send(200).end();
                    });
                    app.listen(3000);

    article.center.code-7
        .wrapper
            pre
                code.javascript.
                    res.set(
                        'Server-Timing',
                        'cache;
                         desc="Cache Read";
                         dur=23.2');

    article.screen.screen--server-timing-screen

    article.center.text-title-1
        .wrapper
            h1 How to measure?

    article.center.code-8
        .wrapper
            pre
                code.javascript.
                    // node.js v0.7.6
                    process.hrtime();
                    // integer[]
                    // [ seconds, nanoseconds ]
                    // [ 8063, 904046009 ]

    article.center.code-0
        .wrapper
            pre
                code.
                    const from = process.hrtime();
                    const duration = process.hrtime(from);

    article.center.code-6
        .wrapper
            pre
                code.javascript.
                    // To milliseconds
                    const ms = parseInt(
                                duration[0] * 1e3 +
                                duration[1] * 1e-6,
                               10);

    article.center.code-0
        .wrapper
            pre
                code.javascript.
                    // node.js v10.7.0, Stage 3
                    const from = process.hrtime.bigint();
                    const to = process.hrtime.bigint();
                    const duration = to - from;

    article.center.code-6
        .wrapper
            pre
                code.javascript.
                    // To milliseconds
                    const ms = duration / 1000000n;

    article.screen.screen--bigint.overlay
        .overlay__abstract.overlay__abstract--right
            h5.overlay__title BigInt
            img.overlay__qr(src="images/bigint.svg", alt="QRCODE cо ссылкой")
            p
                a.overlay__link(href="https://tc39.github.io/proposal-bigint/", data-click=true) https://tc39.github.io/proposal-bigint/

    article.center.text-title-6
        .wrapper
            h1 Need tooling!

    article.screen.screen--npm-server-timing.overlay
        .overlay__abstract.overlay__abstract--right
            h5.overlay__title Server Timing npm package
            img.overlay__qr(src="images/npm-server-timing.svg", alt="QRCODE cо ссылкой")
            p
                a.overlay__link(href="https://www.npmjs.com/package/server-timing-header", data-click=true) https://www.npmjs.com/package/server-timing-header

    article.center.code-7
        .wrapper
            pre
                code.bash.
                    npm i -S server-timing-header

    article.center.code-6
        .wrapper
            pre
                code.javascript.
                    const express = require('express');
                    const app = express();
                    app.get('/', (req, res) => {
                        //…
                        res.send(200).end();
                    });
                    app.listen(3000);

    article.center.code-0
        .wrapper
            pre
                code.diff.
                    + const serverTiming =
                    +    require('server-timing-header');
                      const express = require('express');
                      const app = express();
                    + app.use(serverTiming());
                      app.get('/', (req, res) => {
                          //…

    article.center.code-7
        .wrapper
            pre
                code.javascript.
                    req.serverTiming.from('db');
                    // fetching data from database
                    req.serverTiming.to('db');

    article.center.code-6
        .wrapper
            pre
                code.javascript.
                    req.serverTiming.add(
                        'cache', // name
                        'Cache Read', //description
                        23.2 // value
                    );

    article.center.code-7
        .wrapper
            pre
                code.javascript.
                    req.serverTiming.add(
                        'cache',
                        'Element not in cache',
                    );

    article.screen.screen--server-timing-screen

    article.center.text-title-2
        .wrapper
            h1 Tell me more!

    article.center.code-1
        .wrapper
            pre
                code.javascript.
                    import { ApolloLink } from 'apollo-link';
                    import uuidv4 from 'uuid/v4';

                    const serverTimingLink = request =>
                        new ApolloLink((operation, forward) => {
                            /* … */
                        });

                    export default serverTimingLink;

    article.center.code-2
        .wrapper
            pre
                code.js.
                    const id = uuidv4();
                    if (request) request.serverTiming.from(
                            `${operation.operationName}-${id}`,
                            operation.operationName
                        );
                    return forward(operation).map(data => {
                        if (request) request.serverTiming.to(
                                `${operation.operationName}-${id}`
                            );
                        return data;
                    });

    article.screen.screen--server-timing-use


    article.screen.screen--server-timing.overlay
        .overlay__abstract.overlay__abstract--right
            h5.overlay__title Server Timing
            img.overlay__qr(src="images/server-timing.svg", alt="QRCODE cо ссылкой")
            p
                a.overlay__link(href="https://www.w3.org/TR/2019/WD-server-timing-20190307/", data-click=true) https://www.w3.org/TR/2019/WD-server-timing-20190307/


    article.center.trailer-title
        .wrapper
            h1 Trailer
                br
                | Header

    article.screen.screen--ttfb-data

    article.center.code-0
        .wrapper
            pre
                code.javascript.
                    const {
                        renderToNodeStream
                        } = require("react-dom/server");
                    const React = require("react");
                    const express = require('express');
                    const app = express();
                    app.get('/', (req, res) => {/*…*/});
                    app.listen(3000);

    article.center.code-6
        .wrapper
            pre
                code.javascript.
                    res.writeHead(200, {
                        'Content-Type': 'text/html',
                        'Transfer-Encoding': 'chunked'
                    });
                    res.write("&lt;main id='content'>");

    article.center.code-1
        .wrapper
            pre
                code.javascript.
                    const stream = renderToNodeStream(
                        React.createElement('p', null, 'XXX')
                    );
                    stream.pipe(res, { end: false });
                    stream.on('end', () => {
                        res.write("&lt;/main>").end();
                    });

    article.center.code-10
        .wrapper
            pre
                code.javascript.
                    Server-Timing?

    article.center.code-6
        .wrapper
            pre
                code.javascript.
                    res.writeHead(200, {
                        'Trailer': 'Server-Timing',
                        // …
                    });

    article.center.code-0
        .wrapper
            pre
                code.javascript.
                    stream.on('end', () => {
                        res.write("&lt;/main>")
                        res.addTrailers({
                            'Server-Timing':
                            'metric;desc="metric 2";dur=12'
                        });
                        res.end();
                    });

    article.screen.screen--trail

    article.screen.screen--trailer.overlay
        .overlay__abstract.overlay__abstract--right
            h5.overlay__title Trailer
            img.overlay__qr(src="images/trailer.svg", alt="QRCODE cо ссылкой")
            p
                a.overlay__link(href="https://tools.ietf.org/html/rfc7230#section-4.4", data-click=true) https://tools.ietf.org/html/rfc7230

    article.screen.screen--w3c.overlay
        .overlay__abstract.overlay__abstract--right
            h5.overlay__title World Wide Web Consortium
            img.overlay__qr(src="images/w3c.svg", alt="QRCODE cо ссылкой")
            p
                a.overlay__link(href="https://github.com/w3c/", data-click=true) https://github.com/w3c/


    article.screen.screen--wicg.overlay
        .overlay__abstract.overlay__abstract--right
            h5.overlay__title Web Incubator CG
            img.overlay__qr(src="images/wicg.svg", alt="QRCODE cо ссылкой")
            p
                a.overlay__link(href="https://github.com/WICG/", data-click=true) https://github.com/WICG/


    article.contacts.center.qrcode
        .wrapper
            .about-speaker.half
                p.name Anton Nemtsev
                img.logo(src="images/logo.svg", alt="Werkspot")
                p.link http://silentimp.info/
                p.twitter @silentimp
                p.email thesilentimp@gmail.com
                p.skype skype: ravencry
            .half
                img(src="images/git.svg", alt="QRCODE cо ссылкой на доклад")
            p
                a(href="https://github.com/SilentImp/ServerTimingHeader", data-click=true) https://bit.ly/2opk057
